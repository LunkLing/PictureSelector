apply plugin: 'com.android.library'

//添加以下两个插件
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//你的library版本号
version = "2.2.6"

android {
    compileSdkVersion cfgs.compileSdkVersion
    buildToolsVersion cfgs.buildToolsVersion

    defaultConfig {
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion
        versionCode cfgs.versionCode
        versionName cfgs.versionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //增加lint选项，不加的话下面上传到jCenter有可能会报错
    lintOptions {
        abortOnError false
    }

    //资源前缀
//    resourcePrefix "luck_"

}

task makeJar(type: Copy) {
    delete 'build/libs/PictureSelector.jar' //删除已经存在的jar包
    from('build/intermediates/bundles/release/')//从该目录下加载要打包的文件
    into('build/libs/')//jar包的保存目录
    include('classes.jar')//设置过滤，只打包classes文件
    rename('classes.jar', 'PictureSelector.jar')//重命名，mylibrary.jar 根据自己的需求设置
}
makeJar.dependsOn(build)

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':ucrop')
    //noinspection GradleCompatible
    compile "com.android.support:appcompat-v7:${cfgs.androidSupportVersion}"
    //noinspection GradleCompatible
    compile "com.android.support:recyclerview-v7:${cfgs.androidSupportVersion}"
    compile "com.github.bumptech.glide:glide:${cfgs.glide}"
    compile "io.reactivex.rxjava2:rxjava:${cfgs.rxjava}"
    compile "io.reactivex.rxjava2:rxandroid:${cfgs.rxandroid}"
}



//你的library的地址
def siteUrl = 'https://github.com/LunkLing/PictureSelector'
def gitUrl = 'https://github.com/LunkLing/PictureSelector.git'
def issueUrl = 'https://github.com/LunkLing/PictureSelector/issues'

//这个蛮重要的，你上传到jCenter后一些文件存放的路径，如果不写或者写错了的话
//可以不会产生pom文件，后面上传到jCenter后会报错，这个问题我搞了一下午！
group = "liji.library.dev"
install {
    repositories.mavenInstaller {
        // POM.xml文件内容
        pom {
            project {
                packaging 'aar'
                // 添加描述，不重要
                name 'Picture Selector'
                url siteUrl
                // 协议
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'liji' //your user ID
                        name 'liji' //your name
                        email 'lijiwork@sina.com' //your email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task javadoc(type: Javadoc) {
//
//    //增加编码，这行很重要，如果是windows系统，同时如果在代码中有中文的话，不加这行，上传会报错
//    options.encoding="utf-8"
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        //发布到Bintray的哪个仓库
        repo = "maven"
        //发布到Bintray上的名字
        name = "lib_picture"
        //项目描述
        desc = "Picture Selector"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = ["Apache-2.0"]
        //标签
        labels = ['android']
        publish = true
        publicDownloadNumbers = true
    }
}